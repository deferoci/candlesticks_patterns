function matrix get_return(const bundle b, scalar obs_index, scalar days_p, bool bull[1])
    scalar days = days_p
    scalar base_index = b.close[obs_index]
    matrix Mh = {b.high}
    matrix Ml = {b.low}
    matrix Mc = {b.close}
    matrix returns = {0,0,0,0}

    if ((obs_index + days) > $nobs)
        days = $nobs - obs_index
    endif

    returns[1] = Mc[obs_index + days]

    if bull
        returns[2] = max(Mh[obs_index:obs_index+days])
        returns[3] = min(Ml[obs_index:obs_index+days])
        index_of_max = imaxc(Mh[obs_index:obs_index+days])
        returns[4] = min(Ml[obs_index:obs_index + index_of_max - 1])
        returns -= base_index
        returns /= base_index
    else
        returns[1] = Mc[obs_index + days]
        returns[2] = min(Ml[obs_index:obs_index+days])
        returns[3] = max(Mh[obs_index:obs_index+days])
        index_of_min = iminc(Ml[obs_index:obs_index+days])
        returns[4] = max(Mh[obs_index:obs_index + index_of_min - 1])        
        returns *= -1
        returns += base_index
        returns /= base_index
    endif

    return returns 
end function

function bundle build_bundle_settings(void)
    bundle settings = null

    #Build budle patterns
    bundle hammer = _(id=1, trend=1)
    bundle piercing_lines = _(id=2, trend=1)
    bundle rising_three = _(id=3, trend=1)
    bundle morning_star = _(id=4, trend=1)
    bundle dark_cloud_cover = _(id=5, trend=0)
    bundle falling_three = _(id=6, trend=0)
    bundle evening_star = _(id=7, trend=0)
    bundle b_patterns = _(hammer, piercing_lines, rising_three, morning_star, dark_cloud_cover, falling_three, evening_star)

    matrix m_trend_ranges = {15, 20, 50} #Fissate in base alle medie mobili
    matrix m_quantile_ranges = {30, 60, 130, 260} #6w, 3m, 6m, 1y 
    matrix m_return_days = {5,10,15,20,40,60} # 1,2,3,4,8,12 settimane

    settings.patterns = b_patterns
    settings.trend_ranges = m_trend_ranges 
    settings.quantile_ranges = m_quantile_ranges
    settings.return_days = m_return_days

    return settings
end function

function void print_first_line(void)
    printf("Stock,Date,Pattern,Trend_range,Quantile_range,Days_return,Return_on_day,Max_return,Max_loss,Max_loss_before\n")
end function

function void print_matrix(const matrix M, string sym)
    loop i = 1 .. (rows(M))
        printf("%s,", sym)
        loop t = 1 .. (cols(M) - 1)
            printf("%g,",M[i,t])
        endloop
        t++
        printf("%g\n",M[i,t])
    endloop
end function 