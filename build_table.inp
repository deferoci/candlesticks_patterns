clear 
set verbose off

# Includes
#---------
include help_functions.inp

# Function definitions 
#---------------------
function bundle compute_block(const series ret, scalar meanD)
    bundle b_ret = null
    b_ret.mean = mean(ret)
    b_ret.SE = sd(ret)/sqrt($nobs)
    b_ret.t = (b_ret.mean - meanD) / b_ret.SE
    b_ret.pval = pvalue(t, $nobs, abs(b_ret.t))
    return b_ret
end function

function string pval_stars(const scalar pval)
if pval < 0.01
    return "***"
elif pval < 0.05 
    return "**"
elif pval < 0.1
    return "*"
else 
    return " "
endif
end function

open "D:\DocumentiD\GitHub\candlesticks_patterns\results\results_stocks_0930_2021.csv"

matrix medie_a_n_giorni = {0.002807286574509515,0.005501662121496699,0.008162833506983597,0.010829993394773472,0.02155539207859615,0.032374610340301056}

settings = build_bundle_settings()

path = "results_complete_07_10.csv"

outfile "@path"
    printf("trend; pattern; quantile; daysRet; mean; SE; t; paval\n")
end outfile

outfile "@path" --append
matrix res = {}
matrix row_res = {}
loop t_r = 1 .. 3
    loop patt = 1 .. 7
        loop q_r = 1 .. 4
            loop days = 1 .. 6
                smpl Trend_range == t_r --restrict 
                smpl Pattern == patt --restrict 
                smpl Quantile_range == q_r --restrict 
                smpl Days_return == days --restrict                 
                statistics = compute_block(Return_on_day, medie_a_n_giorni[days]) 
                    printf("%d;",settings.trend_ranges[t_r])
                    printf("%s;",settings.patterns[patt].name)
                    printf("%d;",settings.quantile_ranges[q_r])
                    printf("%d;",settings.return_days[days])
                    printf("%g;",statistics.mean)
                    printf("%g;",statistics.SE)
                    printf("%g;",statistics.t)
                    printf("%g;",statistics.pval)
                    printf("%s\n",pval_stars(statistics.pval))
                smpl full
            endloop
            res = res | row_res
            row_res = {}
        endloop
    endloop
endloop
end outfile