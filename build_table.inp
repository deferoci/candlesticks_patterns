set verbose off

clear

function matrix compute_block(const series ret, scalar meanD)
    matrix M = {0,0,0,0}
    M[1] = mean(ret)
    M[2] = sd(ret)/sqrt($nobs)
    M[3] = M[1]/M[2]
    # FIXME mean Ã¨ nello spazio dopo
    M[4] = pvalue(t, $nobs - meanD, abs(M[3]))
    return M
# Function definitions 
#---------------------
function bundle compute_block(const series ret, scalar meanD)
    bundle b_ret = null
    b_ret.mean = mean(ret)
    b_ret.SE = sd(ret)/sqrt($nobs)
    b_ret.t = (b_ret.mean - meanD) / b_ret.SE
    b_ret.pval = pvalue(t, $nobs, abs(b_ret.t))
    return b_ret
end function

open "D:\DocumentiD\GitHub\candlesticks_patterns\results\results_stocks_0930_2021.csv"

matrix medie_a_n_giorni = {0.002807286574509515,0.005501662121496699,0.008162833506983597,0.010829993394773472,0.02155539207859615,0.032374610340301056}

include help_functions.inp 

settings = build_bundle_settings()

path = "results_complete.csv"

outfile "@path" --append
    printf("trend; pattern; quantile; daysRet; mean; SE; t; paval\n")
end outfile

matrix res = {}
matrix row_res = {}
loop t_r = 1 .. 3
    loop patt = 1 .. 7
        loop q_r = 1 .. 4
            loop days = 1 .. 6
                smpl Trend_range == t_r --restrict 
                smpl Pattern == patt --restrict 
                smpl Quantile_range == q_r --restrict 
                smpl Days_return == days --restrict                 
                row_res = row_res ~ compute_block(Return_on_day, medie_a_n_giorni[days]) 
                outfile "@path" --append
                    printf("%d;%s;%d;%d;%g;%g;%g;%g\n", 
                           settings.trend_ranges[t_r],
                           settings.patterns[patt],
                           settings.quantile_ranges[q_r],
                           settings.return_days[days],
                           row_res[1],
                           row_res[2],
                           row_res[3],
                           row_res[4])
                end outfile
                smpl full
            endloop
            res = res | row_res
            row_res = {}
        endloop
    endloop
endloop

print "ended"

#print res

#mwrite(res, "risultati_dj.csv")